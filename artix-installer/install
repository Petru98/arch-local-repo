#!/bin/sh
set -e
scriptdir=$(CDPATH='' cd -- "$(dirname -- "$0")" && pwd -P)
. "$scriptdir/cfg.sh"

# TODO take rootmnt as an argument
[ "$(id -u)" = 0 ] || critical 'you must execute the script as root'
ping -c1 artixlinux.org > /dev/null 2>&1 || critical 'no internet connection'


# uefi
if grep -q 'Apple .*Inc.' /sys/class/dmi/id/sys_vendor ; then
    modprobe -r -q efivars
else
    modprobe -q efivarfs
fi
if [ -d /sys/firmware/efi/ ]; then
    if ! mountpoint -q /sys/firmware/efi/efivars ; then
        mount -t efivarfs efivarfs /sys/firmware/efi/efivars
    fi
    [ $uefi = true ] || die "uefi is false, but UEFI detected"
else
    [ $uefi = false ] || die "uefi is true, but BIOS detected"
fi


# rootmnt
rootmnt='/mnt'
mountpoint -q "$rootmnt" || die "$rootmnt is not a mountpoint"
if [ $uefi = true ]; then
    mountpoint -q "$rootmnt/$efimnt" || die "$rootmnt/$efimnt is not a mountpoint"
fi


# variables
tmpdir="$(mktemp -d)"
logfile="$scriptdir/log.txt"
pipefile="$tmpdir/pipe"

# prepare
trap 'rm -rf "$tmpdir"' EXIT HUP INT QUIT ABRT TERM
: > "$logfile"
mkfifo "$pipefile"

# XXX maybe use the following and somehow force color for bootstrap and chroot scripts
# https://gitlab.com/bgstack15/bgscripts/-/blob/master/src/usr/bin/ctee
# { tee "${CTEE_tmpfile1}" | sed -u -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?){0,5}[m|K]//g" >> "${outfile1}" ; } | cat "${CTEE_tmpfile1}"

# bootstrap
tee -ia "$logfile" < "$pipefile" &
"$scriptdir/bootstrap.sh" "$rootmnt" > "$pipefile" 2>&1
cp -f -rT "$scriptdir" "$rootmnt/root/install"

# chroot
tee -ia "$logfile" < "$pipefile" &
artix-chroot "$rootmnt" sh /root/install/chroot.sh > "$pipefile" 2>&1
cp -f "$logfile" "$rootmnt/root/install"
