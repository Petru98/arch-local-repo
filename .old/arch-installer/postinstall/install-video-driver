print_info "Installing video card driver."
package_install "dmidecode"

configure_module() {
    [[ "$#" -lt "2" ]] && critical_error "configure_module requires at least 2 arguments"
    local module_name="$1"
    local module
    for module in ${@:2}; do
        local has_module=$(cat /etc/modules-load.d/$module_name.conf 2>&1 | grep $module)
        [[ "$has_module" == "" ]] && echo "$module" >> /etc/modules-load.d/$module_name.conf
        modprobe "$module"
    done
}

check_video_driver() {
    if [[ "$VIDEO_DRIVER" == "" ]]; then
        print_info "Detecting video chipset."
        local vga=$(lspci | grep VGA | tr "[:upper:]" "[:lower:]")
        local vga_length=$(lspci | grep VGA | wc -l)

        if [[ "$(dmidecode --type 1 | grep VirtualBox)" != "" ]]; then
            print_info "Detected Virtualbox."
            VIDEO_DRIVER="virtualbox"

        elif [[ "$(dmidecode --type 1 | grep VMware)" != "" ]]; then
            print_info "Detected VMware."
            VIDEO_DRIVER="vmware"

        elif [[ "$(echo $vga | grep nvidia)" != "" || -f /sys/kernel/debug/dri/0/vbios.rom ]]; then
            if [[ $vga_length == 2 ]]; then
                print_info "Detected Bumblebee."
                VIDEO_DRIVER="bumblebee"
            else
                print_info "Detected Nvidia."
                if bool $INSTALL_PROPRIETARY_GPU_DRIVERS ; then
                    VIDEO_DRIVER="nvidia"
                else
                    VIDEO_DRIVER="nouveau"
                fi
            fi

        elif [[ "$(echo $vga | grep 'advanced micro devices')" != "" || -f /sys/kernel/debug/dri/0/radeon_pm_info || -f /sys/kernel/debug/dri/0/radeon_sa_info ]]; then
            print_info "Detected AMD/ATI."
            if bool $INSTALL_PROPRIETARY_GPU_DRIVERS ; then
                VIDEO_DRIVER="amdgpu"
            else
                VIDEO_DRIVER="ati"
            fi

        elif [[ "$(echo $vga | grep 'intel corporation')" != "" || -f /sys/kernel/debug/dri/0/i915_capabilities ]]; then
            print_info "Detected Intel."
            VIDEO_DRIVER="intel"

        else
            print_info "Detected VESA."
            VIDEO_DRIVER="vesa"
        fi

        if [[ "$VIDEO_DRIVER" == "intel" || "$VIDEO_DRIVER" == "vesa" ]]; then
            if ! prompt_bool "Confirm video driver: $VIDEO_DRIVER" y ; then
                prompt "Type your video driver (e.g. sis, fbdev, modesetting): " VIDEO_DRIVER
            fi
        fi

        print_info "Video driver is $VIDEO_DRIVER."
    fi
}
check_video_driver


case "$VIDEO_DRIVER" in
    virtualbox)
        if [[ "$(lspci | grep 'VMware SVGA' -c)" -gt "0" ]]; then
            package_install xf86-video-vmware
        fi
        package_install virtualbox-guest-utils mesa-libgl $([[ "$LINUX_VERSION" != "linux" ]] && echo -n virtualbox-guest-dkms || echo -n virtualbox-guest-modules-arch)
        configure_module "virtualbox-guest" vboxguest vboxsf vboxvideo
        add_user_to_group $USERNAME vboxsf
        systemctl enable vboxservice
        mkinitcpio -p $LINUX_VERSION
        ;;

    vmware)
        package_install xf86-video-vmware xf86-input-vmmouse
        if [[ "$LINUX_VERSION" != "linux" ]]; then
            aur_package_install open-vm-tools-dkms
        else
            package_install open-vm-tools
        fi
        cat /proc/version > /etc/arch-release
        systemctl enable vmtoolsd
        mkinitcpio -p $LINUX_VERSION
        ;;

    bumblebee)
        XF86_DRIVERS=$(pacman -Qe | grep xf86-video | awk '{print $1}')
        [[ "$XF86_DRIVERS" != "" ]] && pacman -Rcsn --noconfirm $XF86_DRIVERS
        package_install xf86-video-intel bumblebee nvidia
        [[ "$ARCHI" == "x86_64" ]] && package_install lib32-nvidia-utils lib32-virtualgl
        mkinitcpio -p $LINUX_VERSION
        add_user_to_group $USERNAME bumblebee
        ;;

    nvidia)
        XF86_DRIVERS=$(pacman -Qe | grep xf86-video | awk '{print $1}')
        [[ "$XF86_DRIVERS" != "" ]] && pacman -Rcsn --noconfirm $XF86_DRIVERS
        if [[ "$LINUX_VERSION" != "linux" ]]; then
            package_install nvidia-dkms nvidia-utils libglvnd
            print_warning "Do not forget to make a mkinitcpio every time you updated the nvidia driver!"
        else
            package_install nvidia nvidia-utils libglvnd nvidia-settings
        fi
        [[ "$ARCHI" == "x86_64" ]] && package_install lib32-nvidia-utils
        mkinitcpio -p $LINUX_VERSION
        nvidia-xconfig --add-argb-glx-visuals --allow-glx-with-composite --composite --render-accel -o /etc/X11/xorg.conf.d/20-nvidia.conf
        ;;

    nouveau)
        is_package_installed "nvidia" && pacman -Rdds --noconfirm nvidia{,-utils}
        [[ "$ARCHI" == "x86_64" ]] && is_package_installed lib32-nvidia-utils && pacman -Rdds --noconfirm lib32-nvidia-utils
        [[ -f /etc/X11/xorg.conf.d/20-nvidia.conf ]] && rm /etc/X11/xorg.conf.d/20-nvidia.conf
        package_install xf86-video-nouveau mesa-libgl libvdpau-va-gl
        mkinitcpio -p $LINUX_VERSION
        ;;

    ati)
        [[ -f /etc/X11/xorg.conf.d/20-radeon.conf ]] && rm /etc/X11/xorg.conf.d/20-radeon.conf
        [[ -f /etc/X11/xorg.conf ]] && rm /etc/X11/xorg.conf
        package_install xf86-video-ati mesa-libgl mesa-vdpau libvdpau-va-gl
        configure_module "ati" radeon
        mkinitcpio -p $LINUX_VERSION
        ;;

    amdgpu)
        [[ -f /etc/X11/xorg.conf.d/20-radeon.conf ]] && rm /etc/X11/xorg.conf.d/20-radeon.conf
        [[ -f /etc/X11/xorg.conf ]] && rm /etc/X11/xorg.conf
        package_install xf86-video-amdgpu vulkan-radeon mesa-libgl mesa-vdpau libvdpau-va-gl
        configure_module "ati" amdgpu radeon
        mkinitcpio -p $LINUX_VERSION
        ;;

    intel)
        package_install xf86-video-intel mesa-libgl libvdpau-va-gl
        ;;

    *)
        package_install xf86-video-vesa mesa-libgl libvdpau-va-gl
        ;;
esac

package_install --asdeps libva-vdpau-driver
if [[ "$ARCHI" == "x86_64" ]]; then
    is_package_installed mesa-libgl && package_install lib32-mesa-libgl
    is_package_installed mesa-vdpau && package_install lib32-mesa-vdpau
fi
if is_package_installed libvdpau-va-gl ; then
    add_line "export VDPAU_DRIVER=va_gl" "/etc/profile"
fi
